https://youtu.be/PSAT-ORaQ-s
1. Difference between Spring Framework and Spring Boot .

2. Different scopes of Spring beans 
    -singleton
    -prototype
    -request 
    -session 
    -application 

3. What is the enhancement of hashmap implementation in java 8 ?
    Buckets containing a large number of colliding keys will store their entries in a balanced tree instead of a linked list 
    after certain threshold is reached.

4. What is Spring AOP ? 
    -cross cutting concerns
    -aspects as class 
    -methods as Advices
    -point cut 
    -joint point 
    -XML configuration implementation 
    -AspectJ implementation

5. Garbage collection : What is MetaSpace ? How does it differ from PermGen ? 
    --Needs study 
    --From Java 8 , Permgen/Method area is removed. And Metaspace is created in the native OS. 
                Metaspace doesn't have any space constraints. 
                Permgen had memeory constraint, due to which it throws OutOfMemoryException
                In both cases we can manually fix the maximum space allocated 

6. What is a multi catch block ? (pipelining)

7. Hibernate: List out benefits of CriteriaQuery in hibernate : 
    --Another way for data retreival
    -Writing the native sql in object oriented format 
    -No performace benefit over HQL. 

8. What are the types of Cascades supported in JPA ? 
    -Persists: 
    -Merge: 
    -Detached: 
    -Refresh: 
    -Removed: 
    -ALL: 

9. What is Microservices ? Why we are using it ? 
    Microservice is a architectural style that structures application as a collection of services that are:
        Highly maintainable and testable
        Loosely coupled
        Independently deployable
        Organized around business capabilities
        Owned by a small team

    -increased fault tolerance 
    -increase flexibility of scalability 
    -ability to chose the correct tech stack for the microservices 
    -faster time to market 
    -easy debugging (isolation of issue in 1 service)

9.1 What is Domain Driven Design ? 
    Focus on core domain and core logic 
    Finds the complex designs in the model 
    Constant collaboration with Domain experts to improve the application model 

    SOA design used to identify the services and expose the endpoints based on resuse.
    In case of DDD , it brings business and service together. This is where domain design concept fits well for building the microservices. 

9.2 What is Test Driven Development ? 
    Process in which test cases are written before the code that validates those cases.
    It depends on repetition of a very short development cycle
    Steps: 
        Add a test – Write a test case that describe the function completely. 
        Run all the test cases and make sure that the new test case fails.
        Write the code that passes the test case
        Run the test cases
        Refactor code – This is done to remove duplication of code.

9.3 What are the SOLID principles in Java?
    Single Responsibility Principle	
        Each class should be responsible for a single part or functionality of the system.
    Open-Closed Principle	
        Software components should be open for extension, but not for modification.
    Liskov Substitution Principle	
        Objects of a superclass should be replaceable with objects of its subclasses without breaking the system.
    Interface Segregation Principle	
        No client should be forced to implement the methods that it does not use.
    Dependency Inversion Principle	
        High-level modules should not depend on low-level modules, both should depend on abstractions.

10. Garbage Collection Advanced theory : 
    -made a separate document (check that)

11. Database Sharding :
    -larger databases are divided into smaller databases, for faster execution and faster fetch of queries.

12. JVM architecture: (https://youtu.be/ZBJ0u9MaKtM)

    Operation of JVM is to load and execute your app:
    Main components of JVM:

        Class loader subsystem 
            |
            |
            V 
        Runtime Data Areas 
            |
            |
            V 
        Execution Engine 
    
    Class loader subsystem:
        -load :loading byte code(.class) to the memory 
            -Bootstrap class loader (rt.jar) 
            -Extension class loader (jars in jre/lib)
            -Application class loader (CLASSPATH)

        -link :
            -Verify: looks into bytecode, checks compatibility 
            -Prepare : memory is allocated for the static variables and default values assigned
            -Resolve : all symbolic reference are resolved 

        -initialize:
            -static blocks are executed 
            -static variables are assigned the actual values 

    Runtime Data Area:
        -Method area: 
            -known as Permgen, 64MB -default
            -Class data (static variables, byte code)
            -If Permgen is Full -> OutOfMemoryException occurs 
            - -XX:MaxPermSize
            -From Java 8 , Permgen/Method area is removed. And Metaspace is created in the native OS. 
                Metaspace doesn't have any space constraints. 

        -Heap area:
            -Object data is stored 
            -To control heap size: -Xms 
            -Heap area is created per JVM 
            -this area is shared across all threads 
        
        -PC registers:
            -Program Counters 
            -Its is created per Thread 

        -Java Stacks:
            -Created per thread
            -methods called are stacked up in the thread stack 
            -Thread1 cannot see the Thread2 method execution 
            -throws StackOverFlowError if Stack frame calls itself recursively infinte time. 
            -For tuning java stacks: -Xss

    Execution Engine: 
        Interpreter: 
        
        JIT compiler:

        Hotspot Profiler:

        Garbage Collection: 



--MBRDI interview questions:
How can we have return statements in try-catch-finaly block? All the scenarios. 
    return statements can be put in all of the try-catch-finally blocks.
    If return statemnt is in finally block, then it will override the return statement in try or catch block 
    Also, if there is any println() statements. 
    Ater all the println() stateemnts are printed from all the blocks, then the return value will be displayed

Find out the list of prime numbers from a range. (use composite prime factors logic)

What is difference of RequestParam and PathParam. What is the functionality difference ? Why use RequestParam and not PathParam ?
    In case of RequestParam we can declare some variable as optional. 
    @RequestParam(value="id" , required=false) int id 

How can you access the headers in SpringBoot using annotations? from the URI  (https://www.baeldung.com/spring-rest-http-headers)
    By using @RequestHeader 
    Inside the annotations we pass value="" to extract the exact header, 
    if unsure it's present use: required=false, for default value use: defaultValue="something"
    code: 
    @GetMapping("/default")
    public ResponseEntity<String> evaluateDefaultHeaderValue(
      @RequestHeader(value = "optional-header", required=false, defaultValue = "3600") int optionalHeader) {
        return new ResponseEntity<String>(
          String.format("Optional Header is %d", optionalHeader), HttpStatus.OK);
    }

How can we prevent IOC containers from storing beans of some classes, and how can we explicityly tell Spring not to create beans of these clases ?

Tell more about the Spring bean scopes(singleton,prototype,request,session,global-session) - session , request : functionality, lifecylces 

Remove large chunks of ArrayList elements while simultaneously adding it 
EmployeeList has list of employees, remove those employees who are over the age of 60 
Or, example: in Cowin app, we are removing the double vaccinated people from database while adding people partially/never vaccinated

What happens when a order is going to be placed, but stock gets empty. 
What can be done to reverse the order placed.

How SMTP domain can be integrated with Java ? 
    Simple Mail Transfer Protocol 

What is a Maven Multi module project ? (https://www.baeldung.com/maven-multi-module)
    A multi-module project is built from an aggregator POM that manages a group of submodules. 
    In most cases, the aggregator is located in the project's root directory and must have packaging of type pom.
    Now, the submodules are regular Maven projects, and they can be built separately or through the aggregator POM.


Why in spring boot: using the command: mvn clean install, creates 2 jar files in Target directory ?
    In the target directory we basically have 2 types of jar files 
    maven packaged jar (smaller size)
    springboot repackaged jar (larger size) 
    a. the JAR file created by the mvn package command contains only the resources and compiled Java classes from our project's source.
    b. in the repackaged JAR file, we not only have the compiled Java classes from our project 
       but also all the runtime libraries that are needed to start our Spring Boot application,
       For example, an embedded tomcat library is packaged into the BOOT-INF/lib directory.


What is git cherry pick ?

	It is a commit process, where we can choose specific commit to push to the remote repository 

what are the different level of propagaton ? What are the different levels of isolation ?
What is Hibernate @Transactional Annotations ? And different types of Transactions that happen (Propagation, isolation) ?

	In Spring Data JPA , we have a package: org.springframework.transaction.annotation 
	This package has all the Database transaction oriented annotations 
	
	@Transactional: Defines the way of database transaction for the method-level or class level. This affects how a program writes data to database 
	
		Propagation : Defines the transaction execution process 
		
			REQUIRED : Supports a current transaction, creates a new one if none exists 
			REQUIRES_NEW : Creates a new transaction, suspends a current transaction if exists 
			SUPPORTS : Supports a current transaction, execute non-transactionally if none exists 
			NOT_SUPPORTED : Execute non-transactionally, suspends a current transaction if exists 
			MANDATORY : Supports a current transaction, throws exception if none exists 
			NEVER : Execute non-transactionally, throws exception if transaction exists
			NESTED : Execute within a nested transaction, if a current transaction exists
			
			
		Isolation : Represents the isolation level of a transaction, this affects how the program reads data from database
					Exclusively designed for use with {@link Propagation#REQUIRED} or {@link Propagation#REQUIRES_NEW} 
			
			DEFAULT : Use the default isolation level of the underlying datastore.
			READ_UNCOMMITTED : A constant indicating that dirty reads, non-repeatable reads and phantom reads can occur
			READ_COMMITTED : A constant indicating that dirty reads are prevented; non-repeatable reads and phantom reads can occur
			REPEATABLE_READ : A constant indicating that dirty reads and non-repeatable reads are prevented, phantom reads can occure 
			SERIALIZABLE: A constant indicating that dirty reads, non-repeatable reads and phantom reads are prevented
		
		Dirty Reads :
			When 1st transaction writes a value to database , and before the transaction is committed, 2nd transaction reads the data from database. 
			If the 1st transaction fails to commit, then the data read by 2nd transaction becomes a dirty read. 
			
		Non-Repeatable reads :
			This occurs when a transaction reads the same row twice and gets back different values each time.
			For example, suppose transaction-1 reads the row initially, then transaction-2 perfomrs a update/delete action
			and commits the change. Now when transaction-1 reads the same row, it gets back a different value, or doesn't find the row at all. 
			
		Phantom Reads :
			A phantom row is a read that matches a query's search criteria, which is not initially seen. 
			For example, suppose transaction-1 queries the database with a set of condition to retrieve 2 rows. Meanwhile, transaction-2 
			performs a inserts & commits a new row which matches the conditions of transaction-1 query. Now when transaction-1 again re-executes 
			the same query, it gets back 3 sets of rows. The 3rd row is the phantom read. 
			
		Transaction-isolation-level		Dirty-reads	Nonrepeatable-reads	Phantoms
					Read uncommitted		X			X					X
					Read committed			--			X					X
					Repeatable read			--			--					X
					Serializable			--			--					--
					
Database Normalization :
(Refer this tutorial: https://www.youtube.com/watch?v=GFQaEYEc8_8)
1NF --> 5NF 
Safety level increase --->

	First Normal Form :
		-Using row order to convey information is not permitted.
		-Mixing datatypes within a same column is not permitted.
		-Designing a table without a Primary key is not permitted.
		-Storing a repeating group of data items in a single row is not permitted.
		
	Second Normal Form: 
		-Each non-key attributes must depend on the entire Primary key attributes : each combination of primary keys 
			should map to a single record of non-key attribute
	
	Third Normal Form :
		-One non-key attribute's value should not be dependent on another non-key attribute in a table. i.e. Transitive dependency must be avoided. 
		-So, every non-key attribute in a table should depend on the key , the whole key and nothing but the key. 
	
	Boyce-Codd normal form (BCNF) :	
		-Every attribute in a table should depend on a key, the whole key and nothing but the key 
	
	Fourth Normal Form :
		-Multivalued dependencies in a table must be multivalued dependencies on thekey
	
	Fifth Normal Form :
		-The table (which already is in 4NF) cannot be logically describable by joining other tables together  
	
			
What are idempotent methods in REST ?
 -HTTP methods which when called multiple times would impact the state of DB as it impacts for single time. 
 -GET, PUT are the idempotent methods in HTTP 

What is CDN (content delivery network) ? 

What is the difference between DELETE and TRUNCATE ? 

Reverse the first k elements in a Queue (Use lib function)
•	Input : Q = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100] and k=4
•	Output : Q = [40, 30, 20, 10, 50, 60, 70, 80, 90, 100]

Reverse each letter of a sentence 
class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		// your code goes here
		String s = "Rama is a good boy" ;
		
		/*StringBuilder sbr = new StringBuilder(s);
		sbr.reverse();*/
		
		/*
		take the length 
		str[] -> strs, str[]  */
		
		int j=0;
		String[] starr = s.split(" ");
		/**
		 * s.spilt(" ")
		 * */

		for(int i=0;i<starr.length;i++) {
		  // System.out.print(starr[i]+" ");
		  String newStr = starr[i] ;
		   // R a m a -> 
		   for(int k=newStr.length()-1;k>=0;k--) { 
		    System.out.print(newStr.charAt(k));
		    }
		    System.out.print(" ");
		}
		
	    }
}

What is the difference between application context and BeanFactory ?

Find Longest even numbered length word from a sentence.
	public static void findLongestEvenWord(String sentence) {
		//write your code here
		int i = 0;
		String[] starr = sentence.split(" ");
		Map<String,Integer> mapEven = new HashMap<String,Integer>();

		for(i=0;i<starr.length;i++) {
			int num = starr[i].length();
			if(num%2==0) {
				mapEven.put(starr[i],num);
			}
		}
		
		String max = "";
		String present ="";
		int maxLength = 0;
		int presentLength =0;
		for(String key:mapEven.keySet()) {
				present = key;
				presentLength = mapEven.get(key);
			 if(presentLength>maxLength) {
				 maxLength = presentLength ;
				 max = present;
			 }
		}	
		System.out.print(max);
	}
}

-Wipro & Synechron:
   What is JIT ?
   Where are static variables stored in Java memory area ?
   What is Springboot command line runner ?
   What is the difference between Future and CompletableFuture types ?
   What is deadlock ? How can it be avoided ? 
   What are Turbine drivers in Springboot ?
   How Singleton class affects in multithreaded environment ? 
   MultiThreading advanced concepts in Java.
   Producer-consumer problem 
   What is springboot-webflux ?

   Junit playlist : https://www.youtube.com/watch?v=ZjZ20BgCL0o&list=PL6Zs6LgrJj3tE9xbgcz16sNbscYkrtce7&index=1